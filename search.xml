<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Front-matter使用详解</title>
      <link href="2021/05/04/Front-matter%E4%BD%BF%E7%94%A8%E8%AF%A6%E8%A7%A3/"/>
      <url>2021/05/04/Front-matter%E4%BD%BF%E7%94%A8%E8%AF%A6%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h2 id="front-matter包含的内容"><a href="#front-matter包含的内容" class="headerlink" title="front-matter包含的内容"></a>front-matter包含的内容</h2><table><thead><tr><th>参数</th><th>描述</th><th>默认值</th></tr></thead><tbody><tr><td><code>layout</code></td><td>布局</td><td></td></tr><tr><td><code>title</code></td><td>标题</td><td></td></tr><tr><td><code>date</code></td><td>建立日期</td><td>文件建立日期</td></tr><tr><td><code>updated</code></td><td>更新日期</td><td>文件更新日期</td></tr><tr><td><code>comments</code></td><td>开启文章的评论功能</td><td>true</td></tr><tr><td><code>tags</code></td><td>标签（不适用于分页）</td><td></td></tr><tr><td><code>categories</code></td><td>分类（不适用于分页）</td><td></td></tr><tr><td><code>permalink</code></td><td>覆盖文章网址</td><td></td></tr><tr><td><code>keywords</code></td><td>仅用于 meta 标签和 Open Graph 的关键词（不推荐使用）</td><td></td></tr></tbody></table><hr><h2 id="什么是front-matter"><a href="#什么是front-matter" class="headerlink" title="什么是front-matter"></a>什么是front-matter</h2><ol><li><h2 id=""><a href="#" class="headerlink" title="```"></a>```</h2><p>title: tags<br>date: 2021-05-4 09:39:50<br>type: tags</p><h2 id="layout-tag"><a href="#layout-tag" class="headerlink" title="layout: tag"></a>layout: tag</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">2. 就是.md文件最上面的这部分内容</span><br><span class="line"></span><br><span class="line">------</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## 标签详解（只讲解官方文档中说的模糊的）</span><br><span class="line"></span><br><span class="line">1. **layout**：</span><br><span class="line"></span><br><span class="line">   - 作用：指定要使用的模版样式</span><br><span class="line">   - 例如我上面的例子中使用的&#96; tag&#96;模版</span><br><span class="line">   - 如果不指定这个将会使用&#96;根目录&#x2F;_config.yml&#96;中的默认配置&#96;default_layout: post&#96;</span><br><span class="line"></span><br><span class="line">2. **tags**：</span><br><span class="line"></span><br><span class="line">   - 作用：给文章添加标签，使其能在标签页中显示</span><br><span class="line"></span><br><span class="line">   - 如何使用：</span><br><span class="line"></span><br><span class="line">   - &#96;&#96;&#96;</span><br><span class="line">     tags:</span><br><span class="line">     - PS3</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">- 如上所示一篇文章可以设置多个标签</span><br></pre></td></tr></table></figure></li><li><p><strong>categories</strong>：</p><ul><li><p>整体内容基本与 <code>tags</code> 一致</p></li><li><p>区别在于在进行分类管理的时候此标签下的内容是<code>有严格的顺序和层次</code>的，tags没有</p></li><li><pre><code>categories:- Diary</code></pre></li></ul><p>因为hexo的分类具有层次关系，同一文章不能同时存在两个同级分类中，所以下面这种方式</p><p>categories:</p><ul><li>Diary</li><li>Life</li></ul><p>会使分类Life成为Diary的子分类，而不是并列分类。因此，有必要为您的文章选择尽可能准确的分类。</p></li><li><p><strong>permalink</strong>：</p><ul><li>直白的说就是静态文件的存放地址</li><li>如果不指定这个将会使用<code>根目录/_config.yml</code>中的默认配置<code>permalink: :year/:month/:day/:title/</code></li><li>如果指定的文件夹不存在就会创建一个</li><li>你如何设置最后在页面中使用的连接地址就会是什么样的，例如上面这种方式最终生成的文章的连接地址就是<code>xxx.github.io/2021/04/11/：title/</code></li></ul></li><li><p><strong>keywords</strong></p><ul><li>用于SEO优化</li><li>你这篇文章包含哪些关键词</li><li>人家百度这些关键词的时候可能就会显示你的页面</li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> blog文章编写 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Front-matter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>typora+picgo+SM.MS图床实现图片自动上传</title>
      <link href="2021/05/04/typora-picgo-SM-MS%E5%9B%BE%E5%BA%8A%E5%AE%9E%E7%8E%B0%E5%9B%BE%E7%89%87%E8%87%AA%E5%8A%A8%E4%B8%8A%E4%BC%A0/"/>
      <url>2021/05/04/typora-picgo-SM-MS%E5%9B%BE%E5%BA%8A%E5%AE%9E%E7%8E%B0%E5%9B%BE%E7%89%87%E8%87%AA%E5%8A%A8%E4%B8%8A%E4%BC%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="Introduction——前言"><a href="#Introduction——前言" class="headerlink" title="Introduction——前言"></a>Introduction——前言</h2><p>typora写作是很舒服，但是到了图片上传我简直太难了。玩博客用imgchr简直是魔鬼好吧，图片上传完了，居然是乱序上传，导致我很难改图片地址。又因为imgchr每小时30张（根据服务器负载情况调整，大部分图床都有限制），而我图片都是一次全传完，所以就免不了被限制。</p><p>所以后来我就找了个法子——typora + picgo，自动上传图片，这样就可以避免图片都是同一时间传，本来我是想自己开发picgo + imgchr 的插件的，研究了半天，发现imgchr没有api，这就很尴尬了，所以最后只能选择SM.MS作为博客的主要图床了。</p><p>源博客的地址：</p><p><a href="https://link.zhihu.com/?target=https://selfconfusion.github.io/2020/04/18/typora-picgo-SM-MS-%E5%AE%9E%E7%8E%B0%E5%9B%BE%E7%89%87%E8%87%AA%E5%8A%A8%E4%B8%8A%E4%BC%A0/">typora + picgo + SM.MS 实现图片自动上传selfconfusion.github.io<img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/05/04/t1bexV6iwKnZsBr.jpg" alt="图标"></a></p><h2 id="Preparation——前期准备"><a href="#Preparation——前期准备" class="headerlink" title="Preparation——前期准备"></a>Preparation——前期准备</h2><h2 id="typora"><a href="#typora" class="headerlink" title="typora"></a>typora</h2><p>这个就不用多说了吧，Markdown写作神器。百度搜索，全是英文的就是了，或者直接进入<a href="https://www.typora.io/">typora官网</a>下载。</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/05/04/6ArqoIHCtzvgSUT.png" alt="image-20210504143804113"></p><h2 id="Node-js"><a href="#Node-js" class="headerlink" title="Node.js"></a>Node.js</h2><p>picgo有两个版本，一个是CLI版本一个是GUI版本的(CLI版本即PicGo-Core，GUI版本即PicGo.app)。而我使用的是CLI版本的，也就是命令行版本的。</p><p>注意：根据<a href="https://link.zhihu.com/?target=https://picgo.github.io/PicGo-Core-Doc/zh/guide/getting-started.html">文档</a>的描述，要求Node.js 版本 &gt;= 8。</p><blockquote><p>PicGo.app和PicGo-Core之间的区别（命令行）</p></blockquote><ul><li>目前，PicGo（应用程序）仅中文。</li><li>PicGo.app提供了一个GUI，因此与CLI版本相比更易于设置。</li><li>使用PicGo-Core（命令行）进行上传会消耗较少的计算资源，因为该过程仅在上传过程中运行，并且在上传成功或失败后将退出。通过PicGo.app上传时，PicGo.app将始终保持运行状态，不会自动退出。此外，PicGo.app是电子应用程序，它消耗了更多的计算资源。</li><li>PicGo.app和PicGo-Core使用不同的配置文件，但是您可以将<code>picBed</code>PicGo.app的配置文件中key 下的json对象复制到PicGo的配置文件中。</li><li>PicGo.app提供其他功能，例如上传历史记录，自动重命名等。</li></ul><p>——<a href="https://link.zhihu.com/?target=https://support.typora.io/Upload-Image/%23picgoapp-chinese-language-only">typora官网文档</a></p><p>Node.js就不用我多说了吧，我<a href="https://link.zhihu.com/?target=https://selfconfusion.github.io/2020/04/05/github-hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/%23node-js">上一篇博客</a>就有详细的说怎么下载了，这里就不多说了。</p><h2 id="Picgo"><a href="#Picgo" class="headerlink" title="Picgo"></a>Picgo</h2><p>picgo-core以下简称picgo。</p><h3 id="安装与检验"><a href="#安装与检验" class="headerlink" title="安装与检验"></a>安装与检验</h3><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>在任意目录打开<strong>Git Bash</strong>或者cmd等等，输入命令安装。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">yarn global add picgo</span><br><span class="line"></span><br><span class="line"># 或者</span><br><span class="line"></span><br><span class="line">npm install picgo -g</span><br></pre></td></tr></table></figure><p>觉得安装慢的，我<a href="https://link.zhihu.com/?target=https://selfconfusion.github.io/2020/04/05/github-hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/%23%E5%AE%89%E8%A3%85%E6%96%B9%E6%B3%95%E4%BA%8C">上一篇博客</a>也有讲到，切换淘宝源即可。</p><h3 id="检验"><a href="#检验" class="headerlink" title="检验"></a>检验</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">picgo -h</span><br><span class="line"></span><br><span class="line"># 或者</span><br><span class="line"></span><br><span class="line">picgo -v</span><br></pre></td></tr></table></figure><p>输出如图所示即为安装成功。</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/05/04/9FrIivQkPzlTbwn.png" alt="image-20210504143933375"></p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/05/04/8XKBcahHRkjxmpv.png" alt="image-20210504143946721"></p><h2 id="SM-MS"><a href="#SM-MS" class="headerlink" title="SM.MS"></a>SM.MS</h2><blockquote><p>PicGo 本体支持如下图床：</p></blockquote><ul><li><del><code>微博图床</code> v1.0</del> <strong>微博图床从 2019 年 4 月开始进行防盗链，不建议继续使用</strong></li><li><code>七牛图床</code> v1.0</li><li><code>腾讯云 COS v4\v5版本</code> v1.1 &amp; v1.5.0</li><li><code>又拍云</code> v1.2.0</li><li><code>GitHub</code> v1.5.0</li><li><del><code>SM.MS</code> v1.5.1</del> <strong>由于官方不再支持V1版本，暂时请使用<a href="https://link.zhihu.com/?target=https://github.com/xlzy520/picgo-plugin-smms-user">smms-user</a>插件</strong></li><li><code>阿里云 OSS</code> v1.6.0</li><li><code>Imgur</code> v1.6.0</li></ul><p>**本体不再增加默认的图床支持。你可以自行开发第三方图床插件。详见 <a href="https://link.zhihu.com/?target=https://picgo.github.io/PicGo-Core-Doc/">PicGo-Core</a>**。<br>——<a href="https://link.zhihu.com/?target=https://github.com/Molunerfinn/PicGo">PicGo</a><br>为 <a href="https://link.zhihu.com/?target=https://github.com/Molunerfinn/PicGo">PicGo</a> 开发的一款插件，新增了<a href="https://link.zhihu.com/?target=https://sm.ms/home/">SM.MS注册用户</a> 图床。 使用SM.MS V2的API上传，适用于注册了SM.MS的用户。填写<code>Authorization</code>即可<br>——<a href="https://link.zhihu.com/?target=https://github.com/xlzy520/picgo-plugin-smms-user">smms-user</a>作者</p><p>所以我们需要一个SM.MS的密钥。</p><p>可以百度搜索，或直接进入<a href="https://sm.ms/">SM.MS的官网</a>，注册一个账号。</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/05/04/F7xkoV8Qq3HymMw.png" alt="image-20210504144107328"></p><p>登录后，进入个人的设置页面。</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/05/04/HAS6VwopqLZ7rGg.png" alt="image-20210504144136225"></p><p>进入<strong>API Token</strong>页面，生成密钥，新注册的是没有密钥的。生成完后就会出现在<strong>Secret Token</strong>里面。</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/05/04/KWNR3ZsqTiUhc1g.png" alt="image-20210504144431239"></p><h2 id="Setting——配置"><a href="#Setting——配置" class="headerlink" title="Setting——配置"></a>Setting——配置</h2><h2 id="Picgo-1"><a href="#Picgo-1" class="headerlink" title="Picgo"></a>Picgo</h2><p>根据<a href="https://link.zhihu.com/?target=https://picgo.github.io/PicGo-Core-Doc/zh/guide/commands.html%23install-add">PicGo文档</a>的描述，我们得用<code>picgo install [name]</code>来安装插件，其中**[name]**代表的是插件名</p><p>注意：picgo的插件普遍以**picgo-plugin-[name]<strong>来命名，但安装插件时</strong>[name]<strong>不是</strong>picgo-plugin-[name]**，它不需要前面的那一部分。</p><p>上面也说了，本体自带的smms不能用了，想要用SM.MS图床就得安装<a href="https://link.zhihu.com/?target=https://github.com/xlzy520/picgo-plugin-smms-user">smms-user</a>插件。</p><p>安装smms-user插件，只需执行<code>picgo install smms-user</code>安装即可。</p><p>这是我掉过最大的坑了，我本以为文档是特意提醒我，却发现这句话根本没有意义。</p><p>在个人用户的文件夹进入**.picgo<strong>文件夹，打开</strong>config.json**进行配置。</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/05/04/k9OB6MF7Ln1RhuA.png" alt="image-20210504144545688"></p><p>修改如下，注意将<strong>Authorization</strong>的参数换为SM.MS的密钥，即将<strong>Secret Token</strong>替换为密钥。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;picBed&quot;: &#123;</span><br><span class="line">    &quot;current&quot;: &quot;smms-user&quot;,</span><br><span class="line">    &quot;uploader&quot;: &quot;smms-user&quot;,</span><br><span class="line">    &quot;transformer&quot;: &quot;path&quot;,</span><br><span class="line">    &quot;smms-user&quot;: &#123;</span><br><span class="line">      &quot;Authorization&quot;: &quot;Secret Token&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;picgoPlugins&quot;: &#123;</span><br><span class="line">    &quot;picgo-plugin-smms-user&quot;: true</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Typora"><a href="#Typora" class="headerlink" title="Typora"></a>Typora</h2><p>打开typora，进入偏好设置。</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/05/04/oUAGaSBWC46I8sM.png" alt="image-20210504144649414"></p><p>进入图像选项，将<strong>插入图片时…<strong>更改为</strong>上传图片</strong>，勾选<strong>对本地位置的图片应用上述规则</strong>、<strong>插入时自动转义图片URL</strong>。至于第二项我不推荐勾选，因为当你写博客时，想将上传好的图片更换位置，一复制一粘贴，它又给你上传了一遍…当然，如果你想用我也不会阻拦。</p><blockquote><p>If you have “node” and “picgo” installed in system PATH directly, you could also fill “picgo upload” as the custom command directly.<br>——<a href="https://link.zhihu.com/?target=https://support.typora.io/Upload-Image/%23picgo-location">typora官方文档</a></p></blockquote><p>根据官方文档的描述：因为我不是使用typora内置下载的picgo CLI版，所以我们得自定义命令。我们需要将<strong>上传服务</strong>改为<strong>Custom Command</strong>，然后在<strong>自定义命令</strong>里输入<code>picgo upload</code></p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/05/04/qEYctIFAbvglLiC.png" alt="image-20210504144754768"></p><p>至此所有的配置都完成了，之后就可以愉快的使用了。</p><h2 id="Usage——使用"><a href="#Usage——使用" class="headerlink" title="Usage——使用"></a>Usage——使用</h2><p><a href="https://support.typora.io/Upload-Image/#usage">官方文档</a>其实是有说明如何使用的，不过我还是演示一下吧。</p><h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p>截图粘贴需要手动上传，当然啦这可能是为了避免我之前说描述的情况吧。</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/05/04/goLmq7UTxAj4nwt.jpg" alt="img"></p><h2 id="拖拽"><a href="#拖拽" class="headerlink" title="拖拽"></a>拖拽</h2><p>拖拽就不用手动上传了，他会自动上传</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/05/04/jgLONW4T6ne8ats.gif" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> blog文章编写 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
            <tag> Typora </tag>
            
            <tag> 图床 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客写文章及基本操作</title>
      <link href="2021/05/04/Hexo%E5%8D%9A%E5%AE%A2%E5%86%99%E6%96%87%E7%AB%A0%E5%8F%8A%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/"/>
      <url>2021/05/04/Hexo%E5%8D%9A%E5%AE%A2%E5%86%99%E6%96%87%E7%AB%A0%E5%8F%8A%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h2 id="编写文章的工具"><a href="#编写文章的工具" class="headerlink" title="编写文章的工具"></a>编写文章的工具</h2><h3 id="1-Markdown"><a href="#1-Markdown" class="headerlink" title="1.Markdown"></a>1.Markdown</h3><p>写博客文章我们会使用<code>Markdown</code>来排版，它通过一些简单的标记语法让文本具有一定的格式。写作体验和<code>Word</code>这种机械式的排版工具比起来完全不是一个<code>level</code>的。</p><h3 id="2-Typora"><a href="#2-Typora" class="headerlink" title="2.Typora"></a>2.Typora</h3><p>接下来要介绍的主角是一个<code>Markdown</code>编辑器，它能让我们的写作体验达到顶峰。我个人是离不开这个编辑器了，它就是<a href="https://link.zhihu.com/?target=https://www.typora.io/">Typora</a></p><h3 id="好处"><a href="#好处" class="headerlink" title="好处"></a>好处</h3><p>下面是我觉得比较好的两个点：</p><p>①实时预览：在<code>Typora</code>中我们输入标记语法就能实时看到排版效果，解决了传统<code>Markdown</code>编辑器左右分屏式看起来麻烦的烦恼。</p><p>②快捷键输入：很多标记语法我们都可以使用快捷键输入，免去了手动敲语法的烦恼。</p><blockquote><p><strong>当然还有很多强大的功能需要我们细品，这里就不一一赘述了，大家自行探索~</strong></p></blockquote><h3 id="常用快捷键和语法"><a href="#常用快捷键和语法" class="headerlink" title="常用快捷键和语法"></a>常用快捷键和语法</h3><p>标题：Ctrl+1、2、3…对应一、二、三…级标题（光标定位到需要设置为标题的行，按快捷键）</p><p><strong>加粗</strong>：Ctrl+B（选中要加粗的文本，按快捷键）</p><p><em>斜体</em>：Ctrl+I（选中要设置斜体的文本，按快捷键）</p><p>下划线：Ctrl+U（选中要加下划线的文本，按快捷键）</p><p>删除线：Alt+Shift+5（选中要加删除线的文本，按快捷键）</p><p><code>代码片段</code>：Ctrl+Shift+`（选中要设置为代码片段的文本，按快捷键）</p><p>代码块：Ctrl+Shift+K（任意位置按快捷键，选择编程语言然后在代码块中输入代码）</p><p>切换到下一行：Ctrl+Enter（任意位置按快捷键，在代码块中可以跳出代码块另起一行）</p><p><a href="https://link.zhihu.com/?target=https://www.baidu.com/">链接</a>：Ctrl+K（先复制链接，然后选中要加链接的文本，按快捷键。Ctrl+左键点击文本可跳转到对应链接）</p><p>取消格式：再次按相同的快捷键即可</p><p>有序列表：数字+点+空格</p><p>任务列表：加号或减号+空格</p><p>切换到列表下一行：Space+Enter</p><p>嵌套列表：按Tab键</p><p>退出列表：按 Shift+Tab</p><p>插入表格：Ctrl+T</p><p>引用：输入&gt;后面加空格，或者Ctrl+Shift+Q</p><h2 id="Hexo文章管理"><a href="#Hexo文章管理" class="headerlink" title="Hexo文章管理"></a>Hexo文章管理</h2><h3 id="1-创建一个md文件"><a href="#1-创建一个md文件" class="headerlink" title="1.创建一个md文件"></a>1.创建一个md文件</h3><p>md文件也就是<code>Markdown</code>文件，通过以下命令来创建：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new &lt;title&gt;</span><br><span class="line">$ hexo new &quot;我的第一篇文章&quot;</span><br></pre></td></tr></table></figure><h3 id="2-布局（layout）"><a href="#2-布局（layout）" class="headerlink" title="2.布局（layout）"></a>2.布局（layout）</h3><ul><li>创建md文件时，我们可以指定布局</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new [layout] &lt;title&gt;$ hexo new page &quot;我的页面&quot;</span><br></pre></td></tr></table></figure><ul><li>布局有三种：<code>post</code>（文章）、<code>draft</code>（草稿）、<code>page</code>（页面）</li></ul><p>在新建文件时，Hexo 会根据 <code>scaffolds</code> 文件夹内相对应的文件（可以理解为模板）来建立md文件：</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/05/04/3eq5y4FZB29hHoP.png" alt="img"></p><ul><li>如果没有指定布局类型，则为默认布局<code>post</code>，可以在站点配置文件修改 <code>default_layout</code> 参数来修改默认布局。</li><li>当我们创建不同布局的md文件时，它们会存储在不同路径：</li></ul><blockquote><p>对于独立页面来说，Hexo 会创建一个以标题为名字的目录，并在目录中放置一个 <code>index.md</code> 文件，页面布局顾名思义就是用来DIY我们博客页面的。</p></blockquote><h3 id="3-草稿（draft）"><a href="#3-草稿（draft）" class="headerlink" title="3.草稿（draft）"></a>3.草稿（draft）</h3><p><code>draft</code>这种布局在建立时会被保存到 <code>source/_drafts</code> 文件夹中，但不会显示在页面上，如果我们不想某一篇文章显示在页面上，那么就可以把它移动到<code>_drafts</code>文件夹中。</p><ul><li>我们可在启动服务器时加上 <code>--draft</code> 参数来查看草稿。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server --draft</span><br></pre></td></tr></table></figure><ul><li>还可以在站点配置文件中把 <code>render_drafts</code> 参数设为 <code>true</code> 来预览草稿。</li><li>我们可以通过 <code>publish</code> 命令将草稿发布文章或者页面，它将会被移动到指定的文件夹。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo publish [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure><h3 id="4-Front-matter"><a href="#4-Front-matter" class="headerlink" title="4.Front-matter"></a>4.Front-matter</h3><p>当我们创建一个md文件后，打开后会看到一些内容，这些称为<code>Front-matter</code>，它是文件最上方以 <code>---</code> 分隔的区域，用于指定个别文件的变量，举例来说：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Hello</span> <span class="string">World</span> <span class="comment"># 标题就是我们上面创建的时候指定的名字</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2013</span><span class="string">/7/13</span> <span class="number">20</span><span class="string">:46:25</span> <span class="comment"># 文件创建的时间</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><blockquote><p>在<code>Typora</code>中我们在md文件的首行（必须是第一行）输入<code>---</code> ，然后按回车就可以插入<code>Front-matter</code>了。</p></blockquote><p>Front-matter预定义参数</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">layout  布局  默认为true，如果你不想你的文章被处理，可以设置为false</span><br><span class="line">title  标题  标题会显示在最上方居中位置     </span><br><span class="line">date  建立日期    如果不指定则为默认值-文件创建日期，可以自定义。</span><br><span class="line">update  更新日期  如果不指定则为默认值-文件修改后重新生成静态文件的日期。</span><br><span class="line">comments  是否开启文章的评论功能 默认值为true</span><br><span class="line">tags  标签（不适用于页面page布局）</span><br><span class="line">categoreies  分类（不适用于页面page布局）</span><br><span class="line">permalink  覆盖文章网址</span><br><span class="line">keywords  仅用于 meta 标签和 Open Graph 的关键词（不推荐使用）</span><br></pre></td></tr></table></figure><h3 id="为文章添加分类与标签"><a href="#为文章添加分类与标签" class="headerlink" title="为文章添加分类与标签"></a>为文章添加分类与标签</h3><p>只有文章（post布局）支持分类和标签，需要在<code>Front-matter</code>中设置。分类有层级关系，标签没有。</p><p>举个例子：<br>1）下面文章它的标签是：Hexo、博客<br>2）分类是： 个人博客 &gt; Hexo博客<br>3）“Hexo博客” 是 “个人博客” 的子分类</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">categories:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">个人博客（第一层级）</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">Hexo博客（第二层级）</span></span><br><span class="line"><span class="attr">tags:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">Hexo</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">博客</span></span><br></pre></td></tr></table></figure><h3 id="为文章添加多个分类"><a href="#为文章添加多个分类" class="headerlink" title="为文章添加多个分类"></a>为文章添加多个分类</h3><p>1）下面文章属于三个分类：日常 &gt; 生活，日常 &gt; 随想，日记<br>2）其中生活、随想为日常的子分类，日常和日记为同级分类</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">categories:</span></span><br><span class="line"><span class="bullet">-</span> [<span class="string">日常</span>, <span class="string">生活</span>]</span><br><span class="line"><span class="bullet">-</span> [<span class="string">日常</span>, <span class="string">随想</span>]</span><br><span class="line"><span class="bullet">-</span> [<span class="string">日记</span>]</span><br></pre></td></tr></table></figure><h2 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h2><h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><ul><li><strong>清除缓存：</strong><code>hexo clean</code></li><li><strong>生成静态文件：</strong><code>hexo generate</code>可简写为 <code>hexo g</code></li><li><strong>启动服务器：</strong><code>hexo server</code>或者 <code>hexo s</code> 常用参数：<code>-p（--port）</code>重设端口</li><li><strong>部署：</strong><code>hexo deploy</code>可简写为<code>hexo d</code>，用于将网站部署到服务器上。（暂时用不到，目前都是在本地，后面我们将博客托管到<code>GitHub Pages</code>或<code>Gitee Pages</code>时才会用到此命令）<br>常用参数：<code>-g（--generate）</code>，<code>hexo d -g</code>部署前预先生成静态文件，等同于 <code>hexo g -d</code></li></ul><p><strong>一般发布文章或者修改博客后需要这些操作：</strong>清除缓存&gt;生成静态文件&gt;启动服务器，测试没问题后再部署。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 我们可以写成一条命令</span></span><br><span class="line">$ hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</span><br><span class="line">$ hexo d</span><br></pre></td></tr></table></figure><blockquote><p>更多细节请查看：<a href="https://link.zhihu.com/?target=https://hexo.bootcss.com/docs/">Hexo官方文档</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> blog文章编写 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
            <tag> Typora </tag>
            
            <tag> Front-matter </tag>
            
            <tag> 基本操作&amp;基本命令 </tag>
            
            <tag> 快捷键 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Git托管搭建hexo个人网站</title>
      <link href="2021/04/23/%E4%BD%BF%E7%94%A8Git%E6%89%98%E7%AE%A1%E6%90%AD%E5%BB%BAhexo%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/"/>
      <url>2021/04/23/%E4%BD%BF%E7%94%A8Git%E6%89%98%E7%AE%A1%E6%90%AD%E5%BB%BAhexo%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/</url>
      
        <content type="html"><![CDATA[<p><strong>主要分为三个步骤：</strong></p><ul><li>安装配置开发环境</li><li>创建账号和仓库</li><li>生成并上传网站源码</li></ul><h1 id="安装配置开发环境"><a href="#安装配置开发环境" class="headerlink" title="安装配置开发环境"></a>安装配置开发环境</h1><p><strong>主要用到的软件主要有：</strong></p><ul><li>node.js</li><li>git</li><li>hexo-cli</li><li>文件编辑器</li></ul><h2 id="安装node-js"><a href="#安装node-js" class="headerlink" title="安装node.js"></a>安装node.js</h2><p><strong>node.js官网：</strong><a href="https://nodejs.org/zh-cn/">https://nodejs.org/zh-cn/</a></p><p><strong>下载node.js:</strong><br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/04/29/YajrtDTm2gOpJqV.png" alt="选择下载长期支持版 "></p><p>选择下载长期支持版</p><blockquote><p><strong>下载完成后直接打开，安装步骤：</strong></p></blockquote><ol><li><p>直接点next：<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/04/29/FjDcK7iMESV8OsG.jpg" alt="img"></p></li><li><p>勾选 I accept，再点next：<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/04/29/JjEaUy6QlKvoGm1.jpg" alt="img"></p></li><li><p>这里是安装目录，需要的可以修改一下，不改就直接点next：<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/04/29/yLqxWTfiPFKetwQ.jpg" alt="img"></p></li><li><p>这一步也直接next就行了：<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/04/29/RqiwuaOjBfDEe2J.jpg" alt="img"></p></li><li><p>这里可以不用打勾（打勾要安装挺久的），继续next：<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/04/29/BiN2Hwd7juWe6q1.jpg" alt=" "></p></li><li><p>点击install就开始安装咯！如弹出窗口请点击“是”允许：<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/04/29/DAklfE9pM6KRTZb.jpg" alt=" "></p></li><li><p>这样就安装完成了！点 Finish 完成安装：</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/04/29/Vqr8OvYu6ZPe5np.png" alt="img"></p></li></ol><h2 id="安装-git-环境"><a href="#安装-git-环境" class="headerlink" title="安装 git 环境"></a>安装 git 环境</h2><p>**git官网:**<a href="https://git-scm.com/">https://git-scm.com/</a></p><p><strong>下载git:</strong><br>点击download按钮就能下载了(下载速度可能有点慢）<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/04/29/7utXz9o2Chwekfc.jpg" alt="img"></p><blockquote><p><strong>下载完成后直接打开，安装步骤：</strong></p></blockquote><p>1.直接next,下一步：<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/04/29/aW5R6PhnQ8TENxe.jpg" alt="img"></p><ol><li>这里是安装目录，需要的可以修改一下，不改就直接点next继续：<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/04/29/cPN7jLWFA4Cn9qX.jpg" alt="img"></li><li>选择安装的功能，默认，点next继续：<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/04/29/s9P4CVGIkBOeRL8.jpg" alt="img"></li><li>创建开始菜单选项的，默认，点next继续：<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/04/29/8LnFy9tEZhJaAsW.jpg" alt="img"></li><li>选择默认编辑器，我们选 vs code，点next继续:<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/04/29/VG9Tik7qWHmoC4J.jpg" alt="img"></li><li>默认，点next继续:<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/04/29/wTqGiRzgt72rK1s.jpg" alt="img"></li><li>默认，选openssl，点next继续：[<img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/04/29/dwXNR7aDpEWojQI.jpg" alt="img"></li><li>默认，点next继续：<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/04/29/7jGaqDvg4WbkKyY.jpg" alt="img"></li><li>选windows(用cmd作为命令工具)，点next继续:<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/04/29/AGcpRVL4nHMDb9X.jpg" alt="img"></li><li>默认，点next继续:<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/04/29/EwhmSVxTqdNzFKj.jpg" alt="img"></li><li>默认（可能需要.net framework v4.5.1 运行环境，一般win10自带），点next继续:<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/04/29/1b8lJDnRXxe9Qtz.jpg" alt="img"></li><li>默认，点next继续<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/04/29/Uh2rc1C8ueDHdFf.jpg" alt="img"></li><li>默认，点next继续，开始安装<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/04/29/2lJLqOPiXHybpg1.jpg" alt="img"></li><li>安装完成！点next关闭窗口<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/04/29/AdKnkTEbJDfo52u.jpg" alt="img"></li></ol><h2 id="验证安装"><a href="#验证安装" class="headerlink" title="验证安装"></a>验证安装</h2><p>安装好软件后就是测试安装结果的时候了！</p><p>需要打开命令行窗口，输入对应的命令进行验证安装结果！</p><blockquote><p>怎么打开命令行窗口？</p></blockquote><p><code>Window图标键</code> + <code>R</code>，弹出运行窗口，输入<code>cmd</code> 或者 <code>powershell</code> 就弹出来了咯！</p><p><strong>node.js 验证：</strong></p><blockquote><p>好像现在的版本都是自动配置环境变量的，在命令行窗口输入下面的代码进行验证（正常输出版本号就安装成功）：</p></blockquote><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 下面这个命令会输出node的版本号：</span><br><span class="line">node -v</span><br><span class="line"># 下面这条命令会输出npm的版本号：</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure><p><strong>git验证：</strong></p><blockquote><p>在命令行窗口输入下面的代码进行验证（正常输出版本号就安装成功）：</p></blockquote><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 下面这个命令会输出node的版本号：</span><br><span class="line">git --version</span><br></pre></td></tr></table></figure><p><strong>git初始化</strong></p><blockquote><p>Git安装之后需要进行一些基本信息设置</p></blockquote><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 设置用户名</span><br><span class="line">git  config -- global  user.name  &#x27;你再github上注册的用户名&#x27;</span><br><span class="line"># 设置用户邮箱</span><br><span class="line">git  config -- global  user.email  &#x27;注册时候的邮箱&#x27;</span><br><span class="line"># 配置ok之后，我们用如下命令来看看是否配置成功</span><br><span class="line">git config --list</span><br></pre></td></tr></table></figure><h2 id="安装hexo-cli"><a href="#安装hexo-cli" class="headerlink" title="安装hexo-cli"></a>安装hexo-cli</h2><blockquote><p>安装完 node.js 和 git 接着就是安装静态博客生成的软件了！这里用的是hexo。</p><p>使用 node.js 的npm命令进行安装。</p></blockquote><p><strong>打开命令行窗口，输入下面命令</strong>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><blockquote><p>因为服务器在国外，国内可能下载有点慢。</p><p>没有显示红色的<code>ERROR</code>就表示安装成功了!</p></blockquote><p><strong>下载失败？可以试试</strong>:</p><p>也可以使用 淘宝 NPM 镜像 <code>cnpm</code>下载！</p><p>在命令行输入下面命令安装<code>cnpm</code>：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><blockquote><p>没有显示红色的<code>ERROR</code>就表示安装成功了!</p></blockquote><p>然后再输入下面的命令安装 hexo-cli：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install -g hexo-cli</span><br></pre></td></tr></table></figure><blockquote><p>没有显示红色的<code>ERROR</code>就表示安装成功了!</p></blockquote><p><strong>验证安装：</strong></p><p>在命令行输入下面的命令，正常输出则安装成功：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo -v</span><br></pre></td></tr></table></figure><h2 id="编辑器选择"><a href="#编辑器选择" class="headerlink" title="编辑器选择"></a>编辑器选择</h2><blockquote><p>编辑器看个人喜欢，这里推荐的文本编辑器为 Visual Studio Code。</p></blockquote><p><strong>官网下载地址：</strong> <a href="https://code.visualstudio.com/">https://code.visualstudio.com/</a></p><p>直接点击Download按钮下载就行了:<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/04/29/XEDGoyc5KwC8Za3.jpg" alt="img"></p><blockquote><p>安装过程就不描述了，安装过程全中文！建议全部勾选，再一直点下一步就行了！</p></blockquote><p><strong>安装中文语言包步骤：</strong></p><blockquote><p>软件安装完默认是英文的，需要安装中文语言包</p></blockquote><p>点击左边第五个图标，然后在右侧的输入框搜 chinese</p><p>搜索语言包:<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/04/29/mtd1C4UPa3LrTvb.jpg" alt="img"></p><p>第一个就是，点击install按钮安装！</p><p>安装语言包:<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/04/29/O2iqdcMsrxjYVng.jpg" alt="img"></p><p>重启软件后就是中文了！</p><hr><p>创建账号和代码仓库</p><blockquote><p>可根据下面对比表格选择适合的站点！或者全都要！<br>Github 和 gitee 的区别：</p></blockquote><table><thead><tr><th>名称</th><th>Github</th><th>gitee</th></tr></thead><tbody><tr><td>国内访问速度</td><td>一般</td><td>快</td></tr><tr><td>自定义绑定域名</td><td>支持</td><td>需要收费</td></tr><tr><td>免费二级域名</td><td>支持</td><td>支持</td></tr><tr><td>https</td><td>支持</td><td>支持</td></tr><tr><td>单仓库容量限制（网站容量）</td><td>1G</td><td>500M</td></tr><tr><td>总容量上限</td><td>未知</td><td>5G</td></tr></tbody></table><p>GitHub的访问速度有点玄学，国内使用gitee会比较快！</p><h2 id="生成-SSH-密钥"><a href="#生成-SSH-密钥" class="headerlink" title="生成 SSH 密钥"></a>生成 SSH 密钥</h2><p><strong>为什么要生成ssh密钥？</strong><br>主要是为了方便上传网站数据。<br>在Github 或 gitee 后台添加信任密钥可以不用密码或者弱密码上传</p><p><strong>不生成可以吗？：</strong><br>可以！不生成密钥可以使用https方式上传网站，生成密钥用于ssh方式上传。<br>https方式上传时每次都要输入 GitHub 或者 gitee 的密码。<br>ssh 方式可以使用设置的密码或者无密码上传。</p><p>注意： 一定要在英文状态下输入</p><p><strong>开始生成：</strong><br>打开 cmd 或者 powershell 命令行窗口,输入下面的命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;这里填你的邮箱@xx.com&quot;</span><br></pre></td></tr></table></figure><p><strong>然后就会出现以下步骤：</strong><br>步骤1：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Enter file in which to save the key :</span><br></pre></td></tr></table></figure><blockquote><p>保存的文件名，这里建议直接回车！</p></blockquote><p>步骤2：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Enter passphrase (empty for no passphrase):</span><br></pre></td></tr></table></figure><blockquote><p>输入密码（随意）。<br>不想加密码就直接按回车。<br>这个密码是上传文件时要输入的密码。</p></blockquote><p>输入密码过程中是看不到的字符显示出来的，输完回车就行了。</p><p>步骤3：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Enter same passphrase again:</span><br></pre></td></tr></table></figure><blockquote><p>再次输入一次密码！确保和第一次输入的相同！<br>如果上面没设置密码就直接回车</p></blockquote><p>输入密码过程中是看不到的字符显示出来的，输完回车就行了。</p><p><strong>创建成功之后就显示如图：</strong><br>ssh 密钥生成成功！<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/04/29/5SC8bZYVKGQJjp9.jpg" alt="img"></p><p><strong>查看生成的密钥：</strong></p><blockquote><p>密钥内容一般是 <code>ssh-rsa</code> 开头 <code>邮箱</code> 结尾。<br>密钥文件路径默认是在 <code>C:\Users\你的用户名\.ssh\id_rsa.pub</code>。<br>可以用文本编辑器打开文件查看内容！</p></blockquote><h2 id="Github-账户配置"><a href="#Github-账户配置" class="headerlink" title="Github 账户配置"></a>Github 账户配置</h2><p><strong>GitHub官网：</strong> <a href="https://github.com/">https://github.com/</a></p><p><strong>注册：</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/04/29/VWzKjXDdTqhkpNC.jpg" alt="填入对应的信息，直接注册就行 "></p><p>填入对应的信息，直接注册就行</p><blockquote><p>可能还要验证邮箱什么的，跟着页面引导走就行了！<br>注册完成后就以后可以点 <code>sing in</code> 登录咯</p></blockquote><p><strong>创建一个仓库：</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/04/29/5A9ZrfBmkwYPOFL.png" alt="1. 点击 new repository 创建一个新的仓库 "></p><p>主要输入内容：</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/04/29/Oo6bHQ2vx9G1tPn.png" alt="2. 根据图内提示填你的仓库名 "></p><blockquote><p>建完后，点击code 按钮 就会有 https 和 ssh 两种地址可以复制：<br>这两个地址主要拿来通过 <code>git</code> 命令： 上传和下载文件的</p></blockquote><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/04/29/5fRKL9Z1e8Yukgb.png" alt="3. git地址 "></p><p><strong>打开 pages 服务：</strong></p><p>在新创建的仓库页面，找到 <code>settings</code> 点进去！</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/04/29/CeH78SOAuWlz5jD.png" alt="1.打开仓库的设置"></p><p>一直往下拉，就会看到 <code>GitHub Pages</code> 设置</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/04/29/z5M9QgvFBDERLwf.png" alt="2.默认已经打开了的"></p><p><strong>添加ssh密钥：</strong></p><p>点击 GitHub 右上角自己的头像，点击 <code>settings</code> 打开设置：</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/04/29/LvtmkO3h8nwpYdu.png" alt="1. 打开用户设置 "></p><p>点击左边的 <code>SSH and GPG keys</code> ，再点击右边的 <code>new ssh key</code> 来添加ssh密钥<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/04/29/AIfbFnoPKsmg8Dy.png" alt="2. 新建ssh密钥 "></p><p>把 2.1 创建的密钥内容复制进去，就完成了！：<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/04/29/xC8cGSIFpJWjvZi.jpg" alt="3. 添加ssh密钥内容 "></p><p>可能会提示输入密码，注意：要输入的是账号密码，而不是密钥密码</p><p>添加成功如下图：</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/04/29/UDZ84lI1pRQoqT6.png" alt="4. 添加ssh密钥成功 "></p><h2 id="gitee-账户配置"><a href="#gitee-账户配置" class="headerlink" title="gitee 账户配置"></a>gitee 账户配置</h2><p><strong>gitee官网：</strong><a href="https://gitee.com/signup">https://gitee.com/signup</a></p><blockquote><p>注册流程就不细说了，全是中文的！认得字就行：</p></blockquote><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/04/29/3FgzAe9oZWjaQLi.jpg" alt="注册gitee,根据提示输入就行 "></p><p>注册gitee,根据提示输入就行</p><p><strong>新建一个仓库：</strong></p><p>点击右上角头像左边的加号，选择<code>新建仓库</code>：</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/04/29/qCuINsRFEhb3rx7.png" alt="1. 新建仓库"></p><p>如图填好仓库信息就行了：</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/04/29/Q2qvTHXtLNcj6Dy.png" alt="2. 填写仓库信息 "></p><p>这里可以获取到git 克隆 链接 （用于上传下载文件）：</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/04/29/5yZnGeOumEw1PLb.png" alt="3. 创建仓库成功 "></p><p><strong>启用 Gitee Pages 服务：</strong><br>点击仓库顶部的 服务 —— Gitee Pages ：</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/04/29/jan1FuiHNJbkSOE.png" alt="1. 创建仓库成功"></p><p>不需要改什么，勾选 https , 然后直接点启动就行了：</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/04/29/Brvtnqz86KRhwkc.png" alt="2. 启用 Gitee Pages"></p><p>如果上传后网页文件后页面不更新，需要到此页面更新:</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/04/29/ZfUGvcOymzgHkaN.png" alt="更新页面"></p><p><strong>添加 SSH 密钥：</strong></p><p>点击右上角头像，选择设置：</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/04/29/RKbCOGWEV5Bf7FT.png" alt="1. 进入设置页面"></p><p>点击左边的 <code>ssh 公钥</code>，然后在右边把密钥内容复制进去就行：</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/04/29/3fpG4r7kO2H1zyE.png" alt="2. 添加密钥内容"></p><p>可能会提示输入密码，注意：要输入的是账号密码，而不是密钥密码</p><p>添加成功如图：</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/04/29/u2Q7BUIMNZDPFrJ.png" alt="3. 添加密钥成功"></p><hr><h1 id="生成网站和上传文件"><a href="#生成网站和上传文件" class="headerlink" title="生成网站和上传文件"></a>生成网站和上传文件</h1><p>安装配置号环境和弄好账号后就开始生成并上传你的网站文件了！</p><h2 id="使用hexo生成网站"><a href="#使用hexo生成网站" class="headerlink" title="使用hexo生成网站"></a>使用hexo生成网站</h2><p>随便找个位置</p><p>按住 <code>Shift键</code> + <code>鼠标右键</code> ，选择在此处打开powershell 窗口，（win7系统可能是打开cmd）<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/04/29/kqBXPUpnGIr1lJo.jpg" alt="打开powershell窗口"></p><p>打开命令行窗口</p><p>输入命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init m78blog</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/04/29/ZrNPVTX3QUKxnWY.png" alt="image-20210420161339187"><br>然后就会看到生成一个m878blog 文件夹（文件夹名称可随意起）</p><p>进入 m78blog 目录，看到生成了很多文件<br>空白处直接点鼠标右键，选择<code>通过 Code 打开</code></p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/04/29/QsrJARK61wULInb.jpg" alt="通过 Code 打开 blog 文件夹"></p><p>通过 Code 打开 blog 文件夹</p><blockquote><p>看到突然间多了一堆文件就慌了？<br>先别急，捋一下！<br><strong>常用的就：</strong></p><ul><li><code>source 文件夹:</code> 主要放页面文件，里面的_posts文件夹里是放文章的。文章都采用 markdown 文本格式书写，以 .md 后缀名。</li><li><code>themes 文件夹:</code> 顾名思义就是放主题的</li><li><code>_config.yml:</code> 就是站点的配置文件，主题里面也有同名的文件，那个是主题配置文件</li></ul></blockquote><h2 id="修改配置并上传网站"><a href="#修改配置并上传网站" class="headerlink" title="修改配置并上传网站"></a>修改配置并上传网站</h2><p>我们先打开 <code>_config.yml</code> 文件，简单修改以下配置：</p><p>只需在 左边的文件列表选择<code>_config.yml</code>即可打开编辑文件</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/04/29/kMv1qtKB7R8Euol.jpg" alt="打开配置文件"></p><p>打开配置文件</p><blockquote><p><strong>我们主要改的地方有以下几点(找到并修改)：</strong></p></blockquote><p>注意格式：冒号 <code>:</code> 后边有个空格 ，不要删多了；缩进层次也要分明。</p><p><strong>网站主要内容：</strong></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">网站标题</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">&#x27;副标题&#x27;</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">&#x27;描述&#x27;</span></span><br><span class="line"><span class="attr">keywords:</span> <span class="string">关键字</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">作者名称</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zn-CN</span></span><br><span class="line"><span class="attr">timezone:</span> <span class="string">&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><blockquote><p>其它内容如上<br><code>language</code> 即语言，我们改成中文：<code>zn-CN</code><br><code>timezone</code> 就是时区，可以不用写</p></blockquote><p><strong>网站链接：</strong></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">url:</span> <span class="string">https://example.com</span></span><br></pre></td></tr></table></figure><blockquote><p>这个后面的网址改为之前 GitHub 或者 gitee 创建的 pages 地址 一般格式为：<br>Github ： <code>https://用户名.github,io</code><br>gitee : <code>https://用户名.gitee.io</code></p></blockquote><p>如图：</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/04/29/vVMHCBjQr4SlJk5.png" alt="修改链接"></p><p><strong>设置部署地址：</strong><br>找到<code>deploy:</code>,默认可能只有两行，直接复制替换掉原内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">YML</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: 仓库git地址</span><br><span class="line">  branch: master</span><br><span class="line">  message: upload</span><br></pre></td></tr></table></figure><blockquote><p>把链接复制到 <code>repo:</code> 后面就行了。<br>git 链接可以在 github 和gitee 创建的仓库页面获得<br>建议复制ssh 的链接 。</p></blockquote><p>如下图位置：</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/04/29/5fRKL9Z1e8Yukgb.png" alt="GitHub"></p><p>GitHub</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/04/29/5yZnGeOumEw1PLb.png" alt="gitee"></p><p>gitee</p><blockquote><p>建议使用 ssh 链接！即<code>git@</code> 开头的。</p></blockquote><p>改完如下图：</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/04/29/ZuKdXS5sU4ODqRG.png" alt="修改仓库地址"></p><p><strong>上传网站到仓库:</strong></p><p>打开命令行窗口</p><p>首先在终端输入命令安装git部署插件插件(安装了才能上传)：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>如果下载失败可以试试：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><hr><p>在终端输入以下命令就能上传到仓库了:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>下面是使用 SSH 链接方式提交：</p><p>第一次上传可能会出现如下提示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Are you sure you want to continue connecting (yes&#x2F;no&#x2F;[fingerprint])?</span><br></pre></td></tr></table></figure><blockquote><p>输入 <code>yes</code> ,然后回车就行了！</p></blockquote><p>然后就会提示输入密码（即生成ssh密钥时填的密码,没设置则不会提示）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CODE</span><br><span class="line">Enter passphrase for key &#39;&#x2F;c&#x2F;Users&#x2F;MJ&#x2F;.ssh&#x2F;id_rsa&#39;:</span><br></pre></td></tr></table></figure><blockquote><p>输入密码过程中是看不到显示的，直接打完回车就行了，然后等待上传</p></blockquote><p>显示 <code>INFO Deploy done: git</code> 就说明上传成功了！</p><p>用浏览器打开刚才 GitHub 和 gitee 设置分配的域名网址看看，是不是变成博客界面了！</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/04/29/27v9GNakSp1bFVj.png" alt="image-20210421153831099"></p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/04/29/zgFWmRadwEntDQs.png" alt="image-20210421153855175"></p><h1 id="常用设置"><a href="#常用设置" class="headerlink" title="常用设置"></a>常用设置</h1><blockquote><p>这里主要讲一下hexo的一些基本使用。</p></blockquote><p><strong>Hexo 常用命令：</strong></p><ul><li><code>hexo clean</code> : 清理文件以方便重新生成。建议运行以下命令时都清理一下</li><li><code>hexo s</code> : 本机测试命令，运行后可用浏览器通过 localhost:4000 或者 你的局域网ip地址:4000 的地址访问博客内容。</li><li><code>hexo g</code> : 生成网站的静态文件，存放在<code>public</code>目录下。</li><li><code>hexo d</code> : 部署命令,生成网站并上传到设置的git仓库中.</li></ul><p><strong>hexo 写作相关：</strong></p><ul><li><code>hexo n 标题</code> : 这个命令会在 <code>source/_posts</code> 目录下生成一个新文件，编辑文件的内容就是新文章的内容！</li><li><code>hexo n page 标题</code> : 这个命令会在 <code>source</code> 目录下生成一个文件夹，文件夹内有<code>index.md</code>文件。一般作为独立页面使用</li><li><code>hexo n draft 标题</code> : 这个命令建立时会被保存到 <code>source/_drafts</code> 文件夹, 一般作为草稿使用</li><li><code>hexo publish 标题</code> : 这个命令会将<code>source/_drafts</code> 文件夹下的草稿移动回<code>source/_posts</code>目录下</li><li>怎么删除文章：到目录<code>/source/_posts</code>下删除相应的文章文件！</li></ul><blockquote><p>上面我们提到，文章书写主要使用markdown来写,文件后缀名为<code>.md</code><br>可以通过下面的网站来了解markdown的书写格式：</p></blockquote><p>Markdown中文文档: <a href="https://www.appinn.com/markdown/">https://www.appinn.com/markdown/</a><br>Hexo中文文档: <a href="https://hexo.io/zh-cn/docs/">https://hexo.io/zh-cn/docs/</a></p>]]></content>
      
      
      <categories>
          
          <category> Hexo入门 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 搭建过程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown快速入门（typora）</title>
      <link href="2021/04/23/Markdown%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%EF%BC%88typora%EF%BC%89/"/>
      <url>2021/04/23/Markdown%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%EF%BC%88typora%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="代码块："><a href="#代码块：" class="headerlink" title="代码块："></a>代码块：</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;代码块语法：</span><br><span class="line">​&#96;&#96;&#96;java</span><br><span class="line">    </span><br><span class="line">​&#96;&#96;&#96;shell</span><br></pre></td></tr></table></figure><p><strong>1.java代码</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorld</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Hello World&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>2.shell脚本</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">//linux下spring项目的启动命令</span><br><span class="line"><span class="meta">#</span><span class="bash"> java -jar blog start</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="标题："><a href="#标题：" class="headerlink" title="标题："></a>标题：</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;标题一共有6个级别，书写方式如下：</span><br><span class="line"># 一级标题</span><br><span class="line">## 二级标题</span><br><span class="line">### 三级标题</span><br><span class="line">#### 四级标题</span><br><span class="line">##### 五级标题</span><br><span class="line">###### 六级标题</span><br></pre></td></tr></table></figure><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><h1 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;加粗</span><br><span class="line">**等不到天黑**</span><br><span class="line">&#x2F;&#x2F;代码高亮显示</span><br><span class="line">&#x3D;&#x3D;我不是孙红雷、&#x3D;&#x3D;</span><br><span class="line">&#x2F;&#x2F;删除线</span><br><span class="line">~~被删除文字~~</span><br><span class="line">&#x2F;&#x2F;斜体</span><br><span class="line">*斜体内容*</span><br></pre></td></tr></table></figure><p><strong>等不到天黑</strong><br>==我不是孙红雷、==<br><del>被删除文字</del><br><em>斜体内容</em></p><h1 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;引用语法</span><br><span class="line">&gt;作者：M78</span><br><span class="line">&gt;&gt;作者：M78</span><br><span class="line">&gt;&gt;&gt;作者：M78</span><br></pre></td></tr></table></figure><blockquote><p>作者：M78</p><blockquote><p>作者：M78</p></blockquote><blockquote><blockquote><p>作者：M78</p></blockquote></blockquote></blockquote><h1 id="分割线："><a href="#分割线：" class="headerlink" title="分割线："></a>分割线：</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;分割线</span><br><span class="line">---</span><br><span class="line">&#x2F;&#x2F;分割线</span><br><span class="line">***</span><br></pre></td></tr></table></figure><hr><hr><h1 id="图片插入"><a href="#图片插入" class="headerlink" title="图片插入"></a>图片插入</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;在线图片  &#x2F;本地图片</span><br><span class="line">![我的照片](&#x2F;image&#x2F;me.png) --图片路径</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/04/24/idQVmDW5EKM6bHv.jpg"></p><h1 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;超链接语法</span><br><span class="line">[我的blog](https:&#x2F;&#x2F;m78scloud.github.io&#x2F;)</span><br><span class="line">&#x2F;&#x2F;用&lt;&gt;括住url,可自动识别</span><br><span class="line">&lt;www.baidu.com&gt;</span><br></pre></td></tr></table></figure><p><a href="https://m78scloud.github.io/">我的blog</a></p><h1 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;无序列表</span><br><span class="line">- 目录1</span><br><span class="line">- 目录2</span><br><span class="line">- 目录3</span><br><span class="line">&#x2F;&#x2F;有序列表</span><br><span class="line">&#x2F;&#x2F;1+. +名称</span><br></pre></td></tr></table></figure><ul><li>目录1</li><li>目录2</li><li>目录3</li></ul><ol><li>目录1</li><li>目录2</li><li>目录3</li></ol><h1 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h1><table><thead><tr><th></th><th></th><th></th></tr></thead><tbody><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr></tbody></table><h1 id="常用快捷键"><a href="#常用快捷键" class="headerlink" title="常用快捷键"></a>常用快捷键</h1><ul><li>加粗： <code>Ctrl + B</code></li><li>撤销： <code>Ctrl + Z</code></li><li>字体倾斜 ：<code>Ctrl+I</code></li><li>下划线：<code>Ctrl+U</code></li><li>多级标题： <code>Ctrl + 1~6</code></li><li>有序列表：<code>Ctrl + Shift + [</code></li><li>无序列表：<code>Ctrl + Shift + ]</code></li><li>降级快捷键 ：<code>Tab</code></li><li>升级快捷键：<code>Shift + Tab</code></li><li>插入链接： <code>Ctrl + K</code></li><li>插入公式： <code>Ctrl + Shift + M</code></li><li>行内代码： <code>Ctrl + Shift + K</code></li><li>插入图片： <code>Ctrl + Shift + I</code></li><li>返回Typora顶部：<code>Ctrl+Home</code></li><li>返回Typora底部 ：<code>Ctrl+End</code></li><li>创建表格 ：<code>Ctrl+T</code></li><li>选中某句话 ：<code>Ctrl+L</code></li><li>选中某个单词 ：<code>Ctrl+D</code></li><li>选中相同格式的文字 ：<code>Ctrl+E</code></li><li>搜索: <code>Ctrl+F</code></li><li>搜索并替换 ：<code>Ctrl+H</code></li><li>删除线 ：<code>Alt+Shift+5</code></li><li>引用 ：<code>Ctrl+Shift+Q</code></li><li>生成目录：<code>[TOC]+Enter</code></li></ul><p>注：一些实体符号需要在实体符号之前加” \ ”才能够显示</p>]]></content>
      
      
      <categories>
          
          <category> blog文章编写 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
            <tag> Typora </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2021/04/22/hello-world/"/>
      <url>2021/04/22/hello-world/</url>
      
        <content type="html"><![CDATA[<p><a href="https://hexo.io/zh-cn/docs/">官方文档 </a></p>]]></content>
      
      
      <categories>
          
          <category> test </category>
          
      </categories>
      
      
        <tags>
            
            <tag> my first blog </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
